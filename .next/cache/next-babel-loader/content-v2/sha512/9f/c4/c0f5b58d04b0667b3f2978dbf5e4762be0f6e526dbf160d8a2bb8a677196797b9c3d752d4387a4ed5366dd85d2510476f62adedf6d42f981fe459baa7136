{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alexandre Florindo\\\\Desktop\\\\React\\\\13-NextJS-More Features\\\\13-NextJS-More Features\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupItem, {\n    title: props.title,\n    address: props.address,\n    image: props.image,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://meetupguy:3yoql2uvSpYblk1M@cluster0.6qbca.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://meetupguy:3yoql2uvSpYblk1M@cluster0.6qbca.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne().toArray();\n  client.close();\n  console.log(context.params);\n  return {\n    props: {\n      meetupData: meetups.map(meetup => {\n        return {\n          id: meetupId,\n          title: meetup.title,\n          address: meetup.address,\n          description: meetup.description,\n          image: meetup.image\n        };\n      })\n    }\n  };\n};\nexport default MeetUpDetails; // {\n//         id: meetupId,\n//         title: \"title\",\n//         address: \"\",\n//         description: \"\",\n//         image: \"\",\n//       },","map":{"version":3,"sources":["C:/Users/Alexandre Florindo/Desktop/React/13-NextJS-More Features/13-NextJS-More Features/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupItem","MeetUpDetails","props","title","address","image","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","meetupData","id"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,OAAO,EAAED,KAAK,CAACE,OAFjB;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,kGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAlBM;AAoBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,kGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,GAA4BZ,OAA5B,EAA7B;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACJ,MAApB;AACA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACL6B,MAAAA,UAAU,EAAElB,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AAClC,eAAO;AACLW,UAAAA,EAAE,EAAET,QADC;AAELpB,UAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAFT;AAGLC,UAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAHX;AAILE,UAAAA,WAAW,EAAEe,MAAM,CAACf,WAJf;AAKLD,UAAAA,KAAK,EAAEgB,MAAM,CAAChB;AALT,SAAP;AAOD,OARW;AADP;AADF,GAAP;AAaD,CA7BM;AA+BP,eAAeJ,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\n\r\nconst MeetUpDetails = (props) => {\r\n  return (\r\n    <MeetupItem\r\n      title={props.title}\r\n      address={props.address}\r\n      image={props.image}\r\n      description={props.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://meetupguy:3yoql2uvSpYblk1M@cluster0.6qbca.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://meetupguy:3yoql2uvSpYblk1M@cluster0.6qbca.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne().toArray();\r\n\r\n  client.close();\r\n\r\n  console.log(context.params);\r\n  return {\r\n    props: {\r\n      meetupData: meetups.map((meetup) => {\r\n        return {\r\n          id: meetupId,\r\n          title: meetup.title,\r\n          address: meetup.address,\r\n          description: meetup.description,\r\n          image: meetup.image,\r\n        };\r\n      }),\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetUpDetails;\r\n\r\n// {\r\n//         id: meetupId,\r\n//         title: \"title\",\r\n//         address: \"\",\r\n//         description: \"\",\r\n//         image: \"\",\r\n//       },\r\n"]},"metadata":{},"sourceType":"module"}