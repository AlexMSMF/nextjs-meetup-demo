{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alexandre Florindo\\\\Desktop\\\\React\\\\13-NextJS-More Features\\\\13-NextJS-More Features\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupItem, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://meetupguy:3yoql2uvSpYblk1M@cluster0.6qbca.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: meetup._id.toString()\n        },\n        fallback: false\n      };\n    })\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://meetupguy:3yoql2uvSpYblk1M@cluster0.6qbca.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  console.log(context.params);\n  return {\n    props: {\n      meetupData: meetups.map(meetup => {\n        return {\n          id: meetupId,\n          title: meetup.title,\n          address: meetup.address,\n          description: meetup.description,\n          image: meetup.image\n        };\n      })\n    }\n  };\n};\nexport default MeetUpDetails; // {\n//         id: meetupId,\n//         title: \"title\",\n//         address: \"\",\n//         description: \"\",\n//         image: \"\",\n//       },","map":{"version":3,"sources":["C:/Users/Alexandre Florindo/Desktop/React/13-NextJS-More Features/13-NextJS-More Features/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupItem","MeetUpDetails","props","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","meetupData","id","title","address","description","image"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,qCAAvB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,kGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AAC7B,aAAO;AACLC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ,SADH;AAELN,QAAAA,QAAQ,EAAE;AAFL,OAAP;AAID,KALM;AAFF,GAAP;AASD,CArBM;AAuBP,OAAO,MAAMO,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,kGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBE,OAAzB,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACJ,MAApB;AACA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLuB,MAAAA,UAAU,EAAEhB,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AAClC,eAAO;AACLS,UAAAA,EAAE,EAAEP,QADC;AAELQ,UAAAA,KAAK,EAAEV,MAAM,CAACU,KAFT;AAGLC,UAAAA,OAAO,EAAEX,MAAM,CAACW,OAHX;AAILC,UAAAA,WAAW,EAAEZ,MAAM,CAACY,WAJf;AAKLC,UAAAA,KAAK,EAAEb,MAAM,CAACa;AALT,SAAP;AAOD,OARW;AADP;AADF,GAAP;AAaD,CA7BM;AA+BP,eAAe7B,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\n\r\nconst MeetUpDetails = (props) => {\r\n  return <MeetupItem />;\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://meetupguy:3yoql2uvSpYblk1M@cluster0.6qbca.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => {\r\n      return {\r\n        params: { meetupId: meetup._id.toString() },\r\n        fallback: false,\r\n      };\r\n    }),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://meetupguy:3yoql2uvSpYblk1M@cluster0.6qbca.mongodb.net/?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  console.log(context.params);\r\n  return {\r\n    props: {\r\n      meetupData: meetups.map((meetup) => {\r\n        return {\r\n          id: meetupId,\r\n          title: meetup.title,\r\n          address: meetup.address,\r\n          description: meetup.description,\r\n          image: meetup.image,\r\n        };\r\n      }),\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetUpDetails;\r\n\r\n// {\r\n//         id: meetupId,\r\n//         title: \"title\",\r\n//         address: \"\",\r\n//         description: \"\",\r\n//         image: \"\",\r\n//       },\r\n"]},"metadata":{},"sourceType":"module"}